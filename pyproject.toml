[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "repo-analyzer"
version = "0.1.0"
description = "Analyze GitHub organizations and score repository health"
readme = "README.md"
authors = [
    {name = "Ahmed Khaleel"},
]
license = {text = "MIT"}
requires-python = ">=3.12"
keywords = ["github", "repository", "health", "score", "cli", "api"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Version Control :: Git",
]
dependencies = [
    "httpx[http2]>=0.28.0",
    "typer>=0.16.0",
    "aiosqlite>=0.21.0",
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.35.0",
]

[project.urls]
Homepage = "https://github.com/ahmedkhaleel2004/repo-analyzer"
Repository = "https://github.com/ahmedkhaleel2004/repo-analyzer"
Documentation = "https://github.com/ahmedkhaleel2004/repo-analyzer#readme"
"Bug Tracker" = "https://github.com/ahmedkhaleel2004/repo-analyzer/issues"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-vcr>=1.0.2",
    "ruff>=0.12.0",
    "mypy>=1.16.0",
    "types-aiofiles",
]

[project.scripts]
repo-analyzer = "repo_analyzer.cli:app"

# Tool configurations

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["E501"]  # Line too long - we'll allow some flexibility
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
]

[tool.ruff.lint.isort]
known-first-party = ["repo_analyzer"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
ignore_missing_imports = true
exclude = [
    ".venv/",
    "tests/",
    ".ruff_cache/",
    ".mypy_cache/",
    ".pytest_cache/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src/repo_analyzer"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
